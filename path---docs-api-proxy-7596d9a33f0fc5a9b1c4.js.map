{"version":3,"sources":["webpack:///path---docs-api-proxy-7596d9a33f0fc5a9b1c4.js","webpack:///./.cache/json/docs-api-proxy.json"],"names":["webpackJsonp","611","module","exports","data","markdownRemark","html","excerpt","timeToRead","frontmatter","title","parent","__typename","relativePath","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,2/BAAsxBC,QAAA,qIAAAC,WAAA,EAAAC,aAAubC,MAAA,eAAsBC,QAAWC,WAAA,OAAAC,aAAA,uBAAyDC,aAAgBC,KAAA","file":"path---docs-api-proxy-7596d9a33f0fc5a9b1c4.js","sourcesContent":["webpackJsonp([196941059037569],{\n\n/***/ 611:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>人们经常将来自同一主机和端口的服务作为前端React应用程序的后端实现。</p>\\n<p>要告诉开发服务器在开发中将任何未知的请求代理到您的API服务器，请在您的gatsby-config.js中添加一个代理字段，例如：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code>module<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  proxy<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    prefix<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&apos;/api&apos;</span><span class=\\\"token punctuation\\\">,</span>\\n    url<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&apos;http://dev-mysite.com/api/&apos;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>这样，当您在开发中获取（’/ api / todos’）时，开发服务器将认识到它不是一个静态资源，并将您的请求代理为<a href=\\\"http://dev-mysite.com/api/todos%E3%80%82\\\">http://dev-mysite.com/api/todos。</a></p>\\n<p>请记住，代理仅在开发中有效（与gatsby开发），并且由您来确保像/api/todos这样的URL指向生产中环境中的正确位置。</p>\",\"excerpt\":\"人们经常将来自同一主机和端口的服务作为前端React应用程序的后端实现。 要告诉开发服务器在开发中将任何未知的请求代理到您的API服务器，请在您的gatsby-config.js中添加一个代理字段，例如： 这样，当您在开发中获取（’/ api / todos…\",\"timeToRead\":1,\"frontmatter\":{\"title\":\"在开发中代理API请求\"},\"parent\":{\"__typename\":\"File\",\"relativePath\":\"docs/api-proxy.md\"}}},\"pathContext\":{\"slug\":\"/docs/api-proxy/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-api-proxy-7596d9a33f0fc5a9b1c4.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>人们经常将来自同一主机和端口的服务作为前端React应用程序的后端实现。</p>\\n<p>要告诉开发服务器在开发中将任何未知的请求代理到您的API服务器，请在您的gatsby-config.js中添加一个代理字段，例如：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code>module<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  proxy<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    prefix<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&apos;/api&apos;</span><span class=\\\"token punctuation\\\">,</span>\\n    url<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&apos;http://dev-mysite.com/api/&apos;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>这样，当您在开发中获取（’/ api / todos’）时，开发服务器将认识到它不是一个静态资源，并将您的请求代理为<a href=\\\"http://dev-mysite.com/api/todos%E3%80%82\\\">http://dev-mysite.com/api/todos。</a></p>\\n<p>请记住，代理仅在开发中有效（与gatsby开发），并且由您来确保像/api/todos这样的URL指向生产中环境中的正确位置。</p>\",\"excerpt\":\"人们经常将来自同一主机和端口的服务作为前端React应用程序的后端实现。 要告诉开发服务器在开发中将任何未知的请求代理到您的API服务器，请在您的gatsby-config.js中添加一个代理字段，例如： 这样，当您在开发中获取（’/ api / todos…\",\"timeToRead\":1,\"frontmatter\":{\"title\":\"在开发中代理API请求\"},\"parent\":{\"__typename\":\"File\",\"relativePath\":\"docs/api-proxy.md\"}}},\"pathContext\":{\"slug\":\"/docs/api-proxy/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-api-proxy.json\n// module id = 611\n// module chunks = 196941059037569"],"sourceRoot":""}