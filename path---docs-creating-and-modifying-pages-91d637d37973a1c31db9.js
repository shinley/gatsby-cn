webpackJsonp([27706344660178],{618:function(n,a){n.exports={data:{markdownRemark:{html:'<p>Gatsby makes it easy to programmatically control your pages.</p>\n<p>Pages can be created in three ways:</p>\n<ul>\n<li>In your site’s gatsby-node.js by implementing the API <a href="/docs/node-apis/#createPages"><code>createPages</code></a></li>\n<li>Gatsby core automatically turns React components in <code>src/pages</code> into pages</li>\n<li>Plugins can also implement <code>createPages</code> and create pages for you</li>\n</ul>\n<p>You can also implement the API <a href="/docs/node-apis/#onCreatePage"><code>onCreatePage</code></a> to\nmodify pages created in core or plugins or to create client-only pages.</p>\n<h2 id="debugging-help"><a href="#debugging-help" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Debugging help</h2>\n<p>To see what pages are being created by your code or plugins, you can query\nfor page information while developing in Graph<em>i</em>QL. Paste the following\nquery in the Graph<em>i</em>QL IDE for your site. The Graph<em>i</em>QL IDE is available when running your sites development server at <code>HOST:PORT/___graphql</code> e.g. <code>localhost:8000/___graphql</code>.</p>\n<div class="gatsby-highlight">\n      <pre class="language-graphql"><code><span class="token punctuation">{</span>\n  allSitePage <span class="token punctuation">{</span>\n    edges <span class="token punctuation">{</span>\n      node <span class="token punctuation">{</span>\n        path\n        component\n        pluginCreator <span class="token punctuation">{</span>\n          name\n          pluginFilepath\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>You can also query for any <code>context</code> data you or plugins added to pages.</p>\n<h2 id="creating-pages-in-gatsby-nodejs"><a href="#creating-pages-in-gatsby-nodejs" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Creating pages in gatsby-node.js</h2>\n<p>Often you will need to programmatically create pages. For example, you have\nmarkdown files where each should be a page.</p>\n<p>This example assumes that each markdown page has a “path” set in the frontmatter\nof the markdown file.</p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code><span class="token comment">// Implement the Gatsby API &#x201C;createPages&#x201D;. This is called once the</span>\n<span class="token comment">// data layer is bootstrapped to let plugins create pages from data.</span>\nexports<span class="token punctuation">.</span><span class="token function-variable function">createPages</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> boundActionCreators<span class="token punctuation">,</span> graphql <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> createPage <span class="token punctuation">}</span> <span class="token operator">=</span> boundActionCreators\n\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> blogPostTemplate <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`src/templates/blog-post.js`</span></span><span class="token punctuation">)</span>\n    <span class="token comment">// Query for markdown nodes to use in creating pages.</span>\n    <span class="token function">resolve</span><span class="token punctuation">(</span>\n      <span class="token function">graphql</span><span class="token punctuation">(</span>\n        <span class="token template-string"><span class="token string">`\n      {\n        allMarkdownRemark(limit: 1000) {\n          edges {\n            node {\n              frontmatter {\n                path\n              }\n            }\n          }\n        }\n      }\n    `</span></span>\n      <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>result <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>errors<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token function">reject</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>errors<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">// Create pages for each markdown file.</span>\n        result<span class="token punctuation">.</span>data<span class="token punctuation">.</span>allMarkdownRemark<span class="token punctuation">.</span>edges<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> node <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n          <span class="token keyword">const</span> path <span class="token operator">=</span> node<span class="token punctuation">.</span>frontmatter<span class="token punctuation">.</span>path<span class="token punctuation">;</span>\n          <span class="token function">createPage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            path<span class="token punctuation">,</span>\n            component<span class="token punctuation">:</span> blogPostTemplate<span class="token punctuation">,</span>\n            <span class="token comment">// If you have a layout component at src/layouts/blog-layout.js</span>\n            layout<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`blog-layout`</span></span><span class="token punctuation">,</span>\n            <span class="token comment">// In your blog post template&apos;s graphql query, you can use path</span>\n            <span class="token comment">// as a GraphQL variable to query for data from the markdown file.</span>\n            context<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              path<span class="token punctuation">,</span>\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<h2 id="modifying-pages-created-by-core-or-plugins"><a href="#modifying-pages-created-by-core-or-plugins" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Modifying pages created by core or plugins</h2>\n<p>Gatsby core and plugins can automatically create pages for you. Sometimes\nthe default isn’t quite what you want and you need to modify the created\npage objects.</p>\n<h3 id="removing-trailing-slashes"><a href="#removing-trailing-slashes" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Removing trailing slashes</h3>\n<p>A common reason for needing to modify automatically created pages is to remove\ntrailing slashes.</p>\n<p>To do this, in your site’s <code>gatsby-node.js</code> add code\nsimilar to the following:</p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code><span class="token comment">// Implement the Gatsby API &#x201C;onCreatePage&#x201D;. This is</span>\n<span class="token comment">// called after every page is created.</span>\nexports<span class="token punctuation">.</span><span class="token function-variable function">onCreatePage</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> page<span class="token punctuation">,</span> boundActionCreators <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> createPage<span class="token punctuation">,</span> deletePage <span class="token punctuation">}</span> <span class="token operator">=</span> boundActionCreators\n\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token comment">// Remove trailing slash</span>\n    <span class="token keyword">const</span> newPage <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> page<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      path<span class="token punctuation">:</span> page<span class="token punctuation">.</span>path <span class="token operator">===</span> <span class="token template-string"><span class="token string">`/`</span></span> <span class="token operator">?</span> page<span class="token punctuation">.</span>path <span class="token punctuation">:</span> page<span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/\\/$/</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token string">``</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>newPage<span class="token punctuation">.</span>path <span class="token operator">!==</span> page<span class="token punctuation">.</span>path<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// Remove the old page</span>\n      <span class="token function">deletePage</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span>\n      <span class="token comment">// Add the new page</span>\n      <span class="token function">createPage</span><span class="token punctuation">(</span>newPage<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<h3 id="creating-client-only-routes"><a href="#creating-client-only-routes" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Creating client-only routes</h3>\n<p>If you’re creating a “hybrid” Gatsby app with both statically rendered pages\nas well as client-only routes e.g. an app that combines marketing pages and\nyour app that lives under <code>/app/*</code>, you want to add code to your <code>gatsby-node.js</code>\nlike the following:</p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code><span class="token comment">// Implement the Gatsby API &#x201C;onCreatePage&#x201D;. This is</span>\n<span class="token comment">// called after every page is created.</span>\nexports<span class="token punctuation">.</span>onCreatePage <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> page<span class="token punctuation">,</span> boundActionCreators <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> createPage <span class="token punctuation">}</span> <span class="token operator">=</span> boundActionCreators\n  \n  <span class="token comment">// page.matchPath is a special key that&apos;s used for matching pages</span>\n  <span class="token comment">// only on the client.</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/^\\/app/</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    page<span class="token punctuation">.</span>matchPath <span class="token operator">=</span> <span class="token string">&quot;/app/:path&quot;</span>\n\n    <span class="token comment">// Update the page.</span>\n    <span class="token function">createPage</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<h3 id="choosing-the-page-layout"><a href="#choosing-the-page-layout" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Choosing the page layout</h3>\n<p>By default, all pages will use the layout found at <code>/layouts/index.js</code>.</p>\n<p>You may wish to choose a custom layout for certain pages (such as removing header and footer for landing pages). You can choose the layout component when creating pages with the <code>createPage</code> action by adding a layout key to the page object or modify pages created elsewhere using the <code>onCreatePage</code> API. All components in the <code>/layouts/</code> directory are automatically available.</p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code><span class="token comment">// Implement the Gatsby API &#x201C;onCreatePage&#x201D;. This is</span>\n<span class="token comment">// called after every page is created.</span>\nexports<span class="token punctuation">.</span>onCreatePage <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> page<span class="token punctuation">,</span> boundActionCreators <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> createPage <span class="token punctuation">}</span> <span class="token operator">=</span> boundActionCreators\n\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/^\\/landing-page/</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// It&apos;s assumed that `landingPage.js` exists in the `/layouts/` directory</span>\n      page<span class="token punctuation">.</span>layout <span class="token operator">=</span> <span class="token string">&quot;landingPage&quot;</span>\n\n      <span class="token comment">// Update the page.</span>\n      <span class="token function">createPage</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>',excerpt:"Gatsby makes it easy to programmatically control your pages. Pages can be created in three ways: In your site’s gatsby-node.js by…",timeToRead:4,frontmatter:{title:"Creating and modifying pages"},parent:{__typename:"File",relativePath:"docs/creating-and-modifying-pages.md"}}},pathContext:{slug:"/docs/creating-and-modifying-pages/"}}}});
//# sourceMappingURL=path---docs-creating-and-modifying-pages-91d637d37973a1c31db9.js.map