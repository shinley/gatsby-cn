{"version":3,"sources":["webpack:///path---docs-querying-with-graphql-47c534e55f9db584dbbe.js","webpack:///./.cache/json/docs-querying-with-graphql.json"],"names":["webpackJsonp","637","module","exports","data","markdownRemark","html","excerpt","timeToRead","frontmatter","title","parent","__typename","relativePath","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,2fAAAC,QAAA,iHAAAC,WAAA,EAAAC,aAA2pBC,MAAA,yBAAgCC,QAAWC,WAAA,OAAAC,aAAA,mCAAqEC,aAAgBC,KAAA","file":"path---docs-querying-with-graphql-47c534e55f9db584dbbe.js","sourcesContent":["webpackJsonp([253197875786975],{\n\n/***/ 637:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>粗糙的轮廓</p>\\n<ul>\\n<li>什么是GraphQL</li>\\n<li>为什么选择GraphQL？ 由于Gatsby在服务器（在构建时）和客户端上运行，需要指定哪些数据是需要的。</li>\\n<li>强调这是一个仅使用GraphQL的构建时间。 生产中不需要运行GraphQL服务器。 便捷的方式来描述组件的数据需求。</li>\\n<li>一些基本的术语</li>\\n<li>\\n<p>一些基本术语 </p>\\n<ul>\\n<li>基于文件类型+方式数据的类型可以被转换</li>\\n<li>Connections</li>\\n<li>浅谈数据层如何工作 源和transformer 插件。</li>\\n<li>比较Webpack加载器 - 就像加载器，除了创建模式，然后可以被查询。</li>\\n</ul>\\n</li>\\n<li>示例查询展示了排序，筛选，挑选字段，程序化转换</li>\\n<li>链接到一些关于GraphQL高级用法的文档页面。</li>\\n<li>在Heroku上运行的这个站点的iFrame的graphiql实例，以便人们可以运行实时查询。</li>\\n</ul>\",\"excerpt\":\"粗糙的轮廓 什么是GraphQL 为什么选择GraphQL？ 由于Gatsby在服务器（在构建时）和客户端上运行，需要指定哪些数据是需要的。 强调这是一个仅使用GraphQL的构建时间。 生产中不需要运行GraphQL…\",\"timeToRead\":1,\"frontmatter\":{\"title\":\"Querying with GraphQL\"},\"parent\":{\"__typename\":\"File\",\"relativePath\":\"docs/querying-with-graphql.md\"}}},\"pathContext\":{\"slug\":\"/docs/querying-with-graphql/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-querying-with-graphql-47c534e55f9db584dbbe.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>粗糙的轮廓</p>\\n<ul>\\n<li>什么是GraphQL</li>\\n<li>为什么选择GraphQL？ 由于Gatsby在服务器（在构建时）和客户端上运行，需要指定哪些数据是需要的。</li>\\n<li>强调这是一个仅使用GraphQL的构建时间。 生产中不需要运行GraphQL服务器。 便捷的方式来描述组件的数据需求。</li>\\n<li>一些基本的术语</li>\\n<li>\\n<p>一些基本术语 </p>\\n<ul>\\n<li>基于文件类型+方式数据的类型可以被转换</li>\\n<li>Connections</li>\\n<li>浅谈数据层如何工作 源和transformer 插件。</li>\\n<li>比较Webpack加载器 - 就像加载器，除了创建模式，然后可以被查询。</li>\\n</ul>\\n</li>\\n<li>示例查询展示了排序，筛选，挑选字段，程序化转换</li>\\n<li>链接到一些关于GraphQL高级用法的文档页面。</li>\\n<li>在Heroku上运行的这个站点的iFrame的graphiql实例，以便人们可以运行实时查询。</li>\\n</ul>\",\"excerpt\":\"粗糙的轮廓 什么是GraphQL 为什么选择GraphQL？ 由于Gatsby在服务器（在构建时）和客户端上运行，需要指定哪些数据是需要的。 强调这是一个仅使用GraphQL的构建时间。 生产中不需要运行GraphQL…\",\"timeToRead\":1,\"frontmatter\":{\"title\":\"Querying with GraphQL\"},\"parent\":{\"__typename\":\"File\",\"relativePath\":\"docs/querying-with-graphql.md\"}}},\"pathContext\":{\"slug\":\"/docs/querying-with-graphql/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-querying-with-graphql.json\n// module id = 637\n// module chunks = 253197875786975"],"sourceRoot":""}